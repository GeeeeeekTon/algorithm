package org.tzl.weiyunsuan;

/**
 * Created by Ton on 2017/6/13.
 */
public class Test {


    /*
    Java提供的位运算符有：左移( << )、右移( >> ) 、无符号右移( >>> ) 、位与( & ) 、位或( | )、位非( ~ )、位异或( ^ )
    ，除了位非( ~ )是一元操作符外，其它的都是二元操作符。

    正数右移，高位用0补，负数右移，高位用1补，当负数使用无符号右移时，用0进行部位(自然而然的，就由负数变成了正数了)
*/
    public static void main(String[] args) {
        System.out.println(5 << 2);//运行结果是20

        /*0000 0000 0000 0000 0000 0000 0000 0101           然后左移2位后，低位补0：

        0000 0000 0000 0000 0000 0000 0001 0100           换算成10进制为20*/
        System.out.println(5>>2);//运行结果是1
        /*还是先将5转为2进制表示形式：
        0000 0000 0000 0000 0000 0000 0000 0101 然后右移2位，高位补0：
        0000 0000 0000 0000 0000 0000 0000 0001*/



       /*   5转换为二进制：0000 0000 0000 0000 0000 0000 0000 0101

                 3转换为二进制：0000 0000 0000 0000 0000 0000 0000 0011
                -------------------------------------------------------------------------------------
                1转换为二进制：0000 0000 0000 0000 0000 0000 0000 0001

        位与：第一个操作数的的第n位于第二个操作数的第n位如果都是1，那么结果的第n为也为1，否则为0*/
        System.out.println(5 & 3);//结果为1

       /* 5转换为二进制：0000 0000 0000 0000 0000 0000 0000 0101

             3转换为二进制：0000 0000 0000 0000 0000 0000 0000 0011
                -------------------------------------------------------------------------------------
                7转换为二进制：0000 0000 0000 0000 0000 0000 0000 0111
        位或操作：第一个操作数的的第n位于第二个操作数的第n位 只要有一个是1，那么结果的第n为也为1，否则为0*/
        System.out.println(5 | 3);//结果为7


        /*5转换为二进制：0000 0000 0000 0000 0000 0000 0000 0101

        3转换为二进制：0000 0000 0000 0000 0000 0000 0000 0011

                -------------------------------------------------------------------------------------


                6转换为二进制：0000 0000 0000 0000 0000 0000 0000 0110
        位异或：第一个操作数的的第n位于第二个操作数的第n位 相反，那么结果的第n为也为1，否则为0*/
        System.out.println(5 ^ 3);//结果为6



        /*5转换为二进制：0000 0000 0000 0000 0000 0000 0000 0101
                -------------------------------------------------------------------------------------
                -6转换为二进制：1111 1111 1111 1111 1111 1111 1111 1010

        位非：操作数的第n位为1，那么结果的第n位为0，反之。*/
        System.out.println(~5);//结果为-6
        System.out.println(2^32);
        System.out.println(0b100000000000000);
    }
}
